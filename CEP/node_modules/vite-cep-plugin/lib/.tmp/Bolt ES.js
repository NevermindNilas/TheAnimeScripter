(function (thisObj) {
var name = "bolt-es";
var version = "0.0.1";
var scripts = {
	go: "ts-node vite.config.ts",
	dev: "vite",
	debug: "cross-env DEBUG_REACT=true vite build --watch true",
	watch: "tsc && vite build --watch true",
	build: "rimraf dist/* && tsc && vite build --watch false",
	symlink: "cross-env ACTION=symlink vite",
	delsymlink: "cross-env ACTION=delsymlink vite"
};
var dependencies = {
};
var devDependencies = {
	"@babel/core": "^7.16.10",
	"@babel/plugin-proposal-class-properties": "^7.16.0",
	"@babel/plugin-proposal-object-rest-spread": "^7.16.0",
	"@babel/plugin-syntax-dynamic-import": "^7.8.3",
	"@babel/plugin-transform-runtime": "^7.16.4",
	"@babel/preset-env": "^7.16.4",
	"@babel/preset-react": "^7.16.0",
	"@babel/preset-typescript": "^7.16.0",
	"@babel/runtime": "^7.16.3",
	"@rollup/plugin-babel": "^5.3.1",
	"@rollup/plugin-commonjs": "^21.0.2",
	"@rollup/plugin-image": "^2.1.1",
	"@rollup/plugin-json": "^4.1.0",
	"@rollup/plugin-node-resolve": "^13.1.3",
	"@rollup/plugin-replace": "^4.0.0",
	"@sveltejs/vite-plugin-svelte": "^1.0.0-next.30",
	"@types/fs-extra": "^9.0.13",
	"@types/node": "^16.11.7",
	"@types/trusted-types": "^2.0.2",
	"babel-preset-env": "^1.7.0",
	"core-js": "3",
	"cross-env": "^7.0.3",
	"fs-extra": "^10.0.0",
	rimraf: "^3.0.2",
	rollup: "^2.68.0",
	"rollup-plugin-multi-input": "^1.3.1",
	"rollup-plugin-node-copy": "^1.0.4",
	"types-for-adobe": "^7.0.0",
	"types-for-adobe-extras": "^0.0.1",
	typescript: "^4.4.4",
	vite: "^2.9.1",
	"vite-cep-plugin": "^0.2.8",
	yarn: "^1.22.17"
};
var main$1 = "index.js";
var license = "MIT";
var _package = {
	name: name,
	version: version,
	scripts: scripts,
	dependencies: dependencies,
	devDependencies: devDependencies,
	main: main$1,
	license: license
};

var config = {
  version: version,
  id: "com.bolt.es",
  displayName: "Bolt ES",
  symlink: "local",
  port: 3000,
  servePort: 5000,
  startingDebugPort: 8860,
  extensionManifestVersion: 6.0,
  requiredRuntimeVersion: 9.0,
  hosts: [{
    name: "AEFT",
    version: "[0.0,99.9]"
  }, {
    name: "ILST",
    version: "[0.0,99.9]"
  }],
  type: "Panel",
  iconDarkNormal: "./src/assets/light-icon.png",
  iconNormal: "./src/assets/dark-icon.png",
  iconDarkNormalRollOver: "./src/assets/light-icon.png",
  iconNormalRollOver: "./src/assets/dark-icon.png",
  parameters: ["--enable-nodejs", "--mixed-context"],
  width: 500,
  height: 550,
  panels: [{
    mainPath: "./main/index.html",
    name: "main",
    panelDisplayName: "Bolt CEP",
    autoVisible: true,
    width: 600,
    height: 650
  }],
  build: {
    jsxBin: "copy",
    sourceMap: true
  },
  zxp: {
    country: "US",
    province: "CA",
    org: "MyCompany",
    password: "mypassword",
    tsa: "http://timestamp.digicert.com/",
    sourceMap: false,
    jsxBin: "replace"
  },
  installModules: [],
  copyAssets: []
};

var ns = config.id;

var _this = thisObj;

var init$2 = function init() {
  var panelGlobal = _this;
  var dialog = panelGlobal instanceof Panel ? panelGlobal : new Window("palette");
  if (!(panelGlobal instanceof Panel)) dialog.text = "Dialog";
  var button1 = dialog.add("button", undefined, undefined, {
    name: "button1"
  });
  button1.text = "Hello World";

  button1.onClick = function () {
    alert("Hello from After Effects!");
  };

  dialog.layout.layout(true);
  dialog.layout.resize();

  dialog.onResizing = dialog.onResize = function () {
    this.layout.resize();
  };

  if (dialog instanceof Window) dialog.show();
};

var aeft = /*#__PURE__*/({
  __proto__: null,
  init: init$2
});

var init$1 = function init() {
  var dialog = new Window("dialog", "Bolt ES");
  var btn = dialog.add("button", undefined, undefined, {
    name: "btn"
  });
  btn.text = "Hello World";

  btn.onClick = function () {
    alert("Hello from Illustrator");
  };

  dialog.show();
};

var ilst = /*#__PURE__*/({
  __proto__: null,
  init: init$1
});

var init = function init() {
  var dialog = new Window("dialog", "Bolt ES");
  var btn = dialog.add("button", undefined, undefined, {
    name: "btn"
  });
  btn.text = "Hello World";

  btn.onClick = function () {
    alert("Hello from Photoshop");
  };

  dialog.show();
};

var phxs = /*#__PURE__*/({
  __proto__: null,
  init: init
});

// @include './lib/json2.js'
var main;

switch (BridgeTalk.appName) {
  case "aftereffects":
    main = aeft;
    main.init();
    break;

  case "illustrator":
    main = ilst;
    main.init();
    break;

  case "photoshop":
    main = phxs;
    main.init();
    break;
} // Append to Helper Object to call functions directly from console / other scripts
//@ts-ignore


$[ns] = main;
})(this);
