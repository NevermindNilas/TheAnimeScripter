"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.manifestTemplate = void 0;
const extension_template_1 = require("./extension-template");
const manifestTemplate = (props) => {
    const { extensionManifestVersion, id, displayName, version, hosts, requiredRuntimeVersion, standalone, panels, } = props;
    return `<?xml version="1.0" encoding="UTF-8" standalone="${standalone ? "yes" : "no"}"?>
<ExtensionManifest
    Version="${extensionManifestVersion.toFixed(1)}" 
    ExtensionBundleId="${id}"
    ExtensionBundleVersion="${version}"
    ExtensionBundleName="${displayName}" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  >
  <ExtensionList>
    ${panels
        .map((panel) => `<Extension Id="${panel.id}" Version="${version}" />`)
        .filter((value, index, self) => self.indexOf(value) === index) // remove duplicates
        .join("")}
	</ExtensionList>
	<ExecutionEnvironment>
    <HostList>
    ${hosts
        .map((host) => `<Host Name="${host.name}" Version="${host.version}" />`)
        .join("")}
		</HostList>
		<LocaleList>
			<Locale Code="All" />
		</LocaleList>
		<RequiredRuntimeList>
			<RequiredRuntime Name="CSXS" Version="${requiredRuntimeVersion.toFixed(1)}" />
		</RequiredRuntimeList>
	</ExecutionEnvironment>
	<DispatchInfoList>${panels
        .map((panel) => (0, extension_template_1.extensionTemplate)(panel))
        .join("")}</DispatchInfoList>
	</ExtensionManifest>`;
};
exports.manifestTemplate = manifestTemplate;
