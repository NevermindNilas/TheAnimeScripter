name: Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with: 
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Cache Vulkan SDK
      id: cache-vulkan
      uses: actions/cache@v2
      with:
        path: VulkanSDK
        key: ${{ runner.os }}-vulkan-${{ hashFiles('**/VulkanSDK-1.3.275.0-Installer.exe') }}
        restore-keys: |
          ${{ runner.os }}-vulkan-

    - name: Setup Vulkan
      if: steps.cache-vulkan.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.3.275.0/windows/VulkanSDK-1.3.275.0-Installer.exe?Human=true -OutFile VulkanSDK-1.3.275.0-Installer.exe
        7z x -aoa ./VulkanSDK-1.3.275.0-Installer.exe -oVulkanSDK
        Remove-Item .\VulkanSDK\Demos, .\VulkanSDK\Samples, .\VulkanSDK\Third-Party, .\VulkanSDK\Tools, .\VulkanSDK\Tools32, .\VulkanSDK\Bin32, .\VulkanSDK\Lib32 -Recurse -ErrorAction Ignore
        echo "VULKAN_SDK=$(pwd)\VulkanSDK" | Out-File -Append -Encoding utf8 -FilePath $env:GITHUB_ENV

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run build script
      run: python build.py

    - name: Extract version
      id: get_version
      run: |
        echo ::set-output name=VERSION::$(python -c "from main import scriptVersion; print(scriptVersion)")

    - name: Print version
      id: print_version
      run: |
        python -c "from main import scriptVersion; print(scriptVersion)"

    - name: Install 7z
      run: |
        choco install -y 7zip

    - name: Archive files
      run: |
        7z a -mx=9 TAS_${{ steps.get_version.outputs.VERSION }}.7z ./dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TAS }}
      with:
        tag_name: TAS_${{ steps.get_version.outputs.VERSION }}
        release_name: TAS_${{ steps.get_version.outputs.VERSION }}
        draft: true

    - name: Upload Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TAS }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./TAS_${{ steps.get_version.outputs.VERSION }}.7z
        asset_name: TAS_${{ steps.get_version.outputs.VERSION }}.7z
        asset_content_type: application/x-7z-compressed